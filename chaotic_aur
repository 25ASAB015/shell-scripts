#!/bin/bash

# prompt:
# quiero que me ayudes a crear un bash script que automatice estos pasos que he hecho manualmente en arch linux, Documenta el codigo y hazlo muy visual para que cualquiera sin base tecnica pueda entender como funciona. 





# Este script automatiza la actualizaci√≥n de Arch Linux y la configuraci√≥n del repositorio Chaotic-AUR.
# ¬°IMPORTANTE! Ejecuta este script con cuidado y aseg√∫rate de entender cada paso.
# Se recomienda tener una copia de seguridad de tus datos importantes.

echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà"
echo "‚ñà                                                                   ‚ñà"
echo "‚ñà          üöÄ Iniciando el Script de Automatizaci√≥n Arch Linux üöÄ          ‚ñà"
echo "‚ñà                                                                   ‚ñà"
echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà"
echo ""
echo "Este script realizar√° las siguientes acciones:"
echo "1. Actualizar√° tu sistema Arch Linux."
echo "2. Configurar√° el repositorio Chaotic-AUR para acceso a m√°s software."
echo "3. Instalar√° Google Chrome."
echo ""
read -p "¬øEst√°s listo para continuar? (s/n): " respuesta
if [[ ! "$respuesta" =~ ^[Ss]$ ]]; then
    echo "‚ùå Operaci√≥n cancelada por el usuario. ¬°Hasta la pr√≥xima!"
    exit 1
fi

echo ""
echo "---------------------------------------------------------------------"
echo "‚öôÔ∏è  Paso 1: Actualizando las bases de datos de paquetes y claves del sistema..."
echo "---------------------------------------------------------------------"
echo "Esto asegura que tu sistema est√© listo para instalar y actualizar software de forma segura."

# Sincroniza las bases de datos de paquetes (como refrescar una tienda para ver los productos nuevos)
# 'pacman -Sy' le dice a pacman que descargue la lista m√°s reciente de paquetes disponibles.
echo "üîÑ Sincronizando bases de datos de paquetes..."
sudo pacman -Sy || { echo "‚ùå Error al sincronizar pacman. Saliendo."; exit 1; }


# Instala o actualiza el paquete archlinux-keyring (como actualizar las llaves de seguridad de tu casa)
# 'archlinux-keyring' contiene las claves criptogr√°ficas para verificar la autenticidad de los paquetes.
echo "üîë Actualizando las claves de seguridad de Arch Linux (archlinux-keyring)..."
sudo pacman -S archlinux-keyring || { echo "‚ùå Error al instalar archlinux-keyring. Saliendo."; exit 1; }


# Inicializa el sistema de claves de pacman (prepara un llavero nuevo para tus llaves de seguridad)
# 'pacman-key --init' crea el entorno necesario para manejar las claves.
echo "üîí Inicializando el sistema de claves de pacman..."
sudo pacman-key --init || { echo "‚ùå Error al inicializar pacman-key. Saliendo."; exit 1; }

# Rellena el sistema de claves con las claves maestras de Arch Linux (pone las llaves maestras en el llavero)
# 'pacman-key --populate' importa las claves oficiales de los desarrolladores de Arch.
echo "üìã Rellenando el sistema de claves con las claves de Arch Linux..."
sudo pacman-key --populate || { echo "‚ùå Error al poblar pacman-key. Saliendo."; exit 1; }

echo ""
echo "---------------------------------------------------------------------"
echo "‚úÖ Paso 1 Completado: ¬°Tu sistema de paquetes est√° preparado!"
echo "---------------------------------------------------------------------"
echo ""

echo "---------------------------------------------------------------------"
echo "üîÑ Paso 2: Actualizando y reiniciando tu sistema Arch Linux..."
echo "---------------------------------------------------------------------"
echo "Es crucial que tu sistema est√© completamente actualizado antes de a√±adir nuevos repositorios."

# Sincroniza y actualiza completamente el sistema (descarga y actualiza todos los productos de la tienda)
# 'pacman -Syyu' hace una sincronizaci√≥n forzada de las bases de datos y luego actualiza todos los paquetes instalados.
echo "‚¨ÜÔ∏è  Actualizando completamente tu sistema (esto puede tardar un poco)..."
sudo pacman -Syyu || { echo "‚ùå Error al actualizar el sistema. Saliendo."; exit 1; }


echo ""
echo "---------------------------------------------------------------------"
echo "‚ö†Ô∏è  Paso 2 Completado. ¬°Reiniciando el sistema para aplicar los cambios!"
echo "---------------------------------------------------------------------"
echo ""

# Reinicia el sistema (como reiniciar tu computadora despu√©s de una actualizaci√≥n importante)
# 'reboot' apaga y enciende la computadora. ¬°El script se detendr√° aqu√≠ y continuar√° despu√©s del reinicio!
echo "‚ú® Reiniciando el sistema en 5 segundos..."
sleep 5
sudo reboot

# --- EL SCRIPT CONTINUAR√çA AQU√ç DESPU√âS DEL REINICIO ---
# Sin embargo, los scripts de bash no persisten el estado entre reinicios
# Por lo tanto, esta parte del script DEBER√çA EJECUTARSE MANUALMENTE o con un segundo script
# O ser un script que se ejecute al inicio del sistema si lo deseas automatizar completamente.
# Para este ejercicio, asumimos que el usuario lo ejecutar√° una segunda vez despu√©s del reinicio.

# Mensaje para el usuario para que sepa qu√© hacer
echo "---------------------------------------------------------------------"
echo "üö® ATENCI√ìN: El sistema se reiniciar√°. Por favor, ejecuta este script "
echo "             NUEVAMENTE despu√©s de que tu sistema se haya reiniciado"
echo "             para continuar con la configuraci√≥n de Chaotic-AUR."
echo "---------------------------------------------------------------------"
exit 0 # Salimos del script, el resto se ejecutar√° despu√©s del reinicio.


# --- PARTE DEL SCRIPT QUE SE EJECUTA DESPU√âS DEL REINICIO ---
# Idealmente, deber√≠as ejecutar este script una segunda vez tras el reinicio.
# Para fines de demostraci√≥n, el c√≥digo sigue aqu√≠.

: <<'END_COMMENT'
# Esto es un comentario multil√≠nea.
# Las siguientes l√≠neas NO se ejecutar√°n a menos que elimines el 'exit 0' de arriba
# y tengas un mecanismo para que el script contin√∫e despu√©s de un reinicio.
# Generalmente, esto se maneja con dos scripts o con un servicio de systemd.

# Solo para fines ilustrativos:
echo ""
echo "---------------------------------------------------------------------"
echo "üöÄ Paso 3: Configurando el repositorio Chaotic-AUR (despu√©s del reinicio)..."
echo "---------------------------------------------------------------------"
echo "Esto te permitir√° acceder a m√°s software que no est√° en los repositorios oficiales."

# Cambia al directorio donde est√°n las claves del repositorio Chaotic-AUR
# 'cd /run/media/arch/ARCHCRAFT_2/setup_chaotic' mueve tu "ubicaci√≥n" en la terminal.
echo "üìÇ Navegando al directorio de las claves Chaotic-AUR..."
# Aseg√∫rate de que esta ruta sea la correcta para tu USB o ubicaci√≥n de los archivos.
# Por ejemplo, si los archivos est√°n en tu carpeta de descargas, ser√≠a 'cd ~/Downloads/setup_chaotic'
# O puedes copiarlos a un lugar fijo antes de ejecutar el script.
# Aqu√≠ estoy asumiendo la ruta que mencionaste en tus pasos.
CHAOTIC_SETUP_DIR="/run/media/arch/ARCHCRAFT_2/setup_chaotic"
if [ -d "$CHAOTIC_SETUP_DIR" ]; then
    cd "$CHAOTIC_SETUP_DIR" || { echo "‚ùå No se pudo acceder al directorio: $CHAOTIC_SETUP_DIR. Verifica la ruta y si el USB est√° montado."; exit 1; }
    echo "‚úÖ Directorio '$CHAOTIC_SETUP_DIR' encontrado y accedido."
else
    echo "‚ùå ERROR: El directorio '$CHAOTIC_SETUP_DIR' no existe. Aseg√∫rate de que tu USB est√© conectado y la ruta sea correcta."
    echo "Por favor, ajusta la variable CHAOTIC_SETUP_DIR en el script si la ruta es diferente."
    exit 1
fi


# Agrega las claves p√∫blicas de Chaotic-AUR al sistema de claves de pacman
# 'pacman-key --add' importa una clave espec√≠fica.
echo "üîë A√±adiendo las claves p√∫blicas de Chaotic-AUR..."
sudo pacman-key --add 67bf8ca6da181643c9723b4ed6c9442437365605.asc || { echo "‚ùå Error al a√±adir la primera clave. Saliendo."; exit 1; }
sudo pacman-key --add ef925ea60f33d0cb85c44ad13056513887b78aeb.asc || { echo "‚ùå Error al a√±adir la segunda clave. Saliendo."; exit 1; }

# Firma localmente las claves (como darle tu sello de aprobaci√≥n a esas llaves)
# 'pacman-key --lsign-key' marca una clave como de confianza para tu sistema.
echo "‚úçÔ∏è Firmando localmente las claves de Chaotic-AUR..."
sudo pacman-key --lsign-key 3A40CB5E7E5CBC30 || { echo "‚ùå Error al firmar la primera clave. Saliendo."; exit 1; }
sudo pacman-key --lsign-key 349BC7808577C592 || { echo "‚ùå Error al firmar la segunda clave. Saliendo."; exit 1; }
sudo pacman-key --lsign-key 3056513887B78AEB || { echo "‚ùå Error al firmar la tercera clave. Saliendo."; exit 1; }


echo ""
echo "---------------------------------------------------------------------"
echo "üìÇ Paso 4: Creando y configurando el espejo de Chaotic-AUR..."
echo "---------------------------------------------------------------------"
echo "Esto le dice a tu sistema d√≥nde encontrar los paquetes de Chaotic-AUR."

# Crea el directorio para los espejos de pacman si no existe (crea un nuevo estante para la tienda)
# 'mkdir -p' crea un directorio y sus directorios padres si no existen.
echo "üìÅ Creando el directorio para la lista de espejos de Chaotic-AUR..."
sudo mkdir -p /etc/pacman.d/ || { echo "‚ùå Error al crear el directorio /etc/pacman.d/. Saliendo."; exit 1; }

# A√±ade la lista de espejos de Chaotic-AUR al archivo de configuraci√≥n de pacman
# Usamos 'sudo tee -a' para a√±adir la l√≠nea al final del archivo sin abrir un editor.
echo "üåê A√±adiendo la lista de espejos de Chaotic-AUR..."
CHAOTIC_MIRROR_LIST="/etc/pacman.d/chaotic-mirrorlist"
echo 'Server = https://eu.mirrors.unitedwefall.fr/chaotic-aur/$repo/$arch' | sudo tee "$CHAOTIC_MIRROR_LIST" > /dev/null || { echo "‚ùå Error al a√±adir el espejo al archivo $CHAOTIC_MIRROR_LIST. Saliendo."; exit 1; }
echo 'Server = https://de.mirrors.unitedwefall.fr/chaotic-aur/$repo/$arch' | sudo tee -a "$CHAOTIC_MIRROR_LIST" > /dev/null || { echo "‚ùå Error al a√±adir el espejo al archivo $CHAOTIC_MIRROR_LIST. Saliendo."; exit 1; }
echo 'Server = https://sg.mirrors.unitedwefall.fr/chaotic-aur/$repo/$arch' | sudo tee -a "$CHAOTIC_MIRROR_LIST" > /dev/null || { echo "‚ùå Error al a√±adir el espejo al archivo $CHAOTIC_MIRROR_LIST. Saliendo."; exit 1; }
echo 'Server = https://us.mirrors.unitedwefall.fr/chaotic-aur/$repo/$arch' | sudo tee -a "$CHAOTIC_MIRROR_LIST" > /dev/null || { echo "‚ùå Error al a√±adir el espejo al archivo $CHAOTIC_MIRROR_LIST. Saliendo."; exit 1; }


# Edita el archivo principal de configuraci√≥n de pacman para a√±adir el repositorio Chaotic-AUR
# 'nano' es un editor de texto simple que se abre en la terminal.
echo "‚úèÔ∏è  Abriendo el archivo de configuraci√≥n principal de Pacman (/etc/pacman.conf)."
echo "   A√ëADE las siguientes l√≠neas al FINAL del archivo:"
echo ""
echo "   [chaotic-aur]"
echo "   Include = /etc/pacman.d/chaotic-mirrorlist"
echo ""
echo "   Presiona Ctrl+X para salir, luego 'Y' para guardar y Enter para confirmar."
sudo nano /etc/pacman.conf || { echo "‚ùå Error al abrir pacman.conf con nano. Saliendo."; exit 1; }

echo ""
echo "---------------------------------------------------------------------"
echo "‚úÖ Paso 4 Completado: ¬°Chaotic-AUR est√° configurado!"
echo "---------------------------------------------------------------------"
echo ""

echo "---------------------------------------------------------------------"
echo "üîÑ Paso 5: Sincronizando y actualizando el sistema nuevamente (con Chaotic-AUR)..."
echo "---------------------------------------------------------------------"
echo "Ahora que hemos a√±adido un nuevo repositorio, necesitamos que el sistema lo reconozca."

# Sincroniza y actualiza completamente el sistema (ahora con el nuevo "supermercado" de Chaotic-AUR)
echo "‚¨ÜÔ∏è  Sincronizando y actualizando todo el sistema, incluyendo Chaotic-AUR..."
sudo pacman -Syyu || { echo "‚ùå Error al sincronizar/actualizar con Chaotic-AUR. Saliendo."; exit 1; }

# Instala los paquetes de claves y espejos de Chaotic-AUR (seguridad y lista de servidores)
# Esto es importante para que pacman conf√≠e en los paquetes de Chaotic-AUR.
echo "üîí Instalando las claves y la lista de espejos de Chaotic-AUR..."
sudo pacman -S chaotic-keyring chaotic-mirrorlist || { echo "‚ùå Error al instalar chaotic-keyring/mirrorlist. Saliendo."; exit 1; }

echo ""
echo "---------------------------------------------------------------------"
echo "‚úÖ Paso 5 Completado: ¬°Todo actualizado y Chaotic-AUR listo!"
echo "---------------------------------------------------------------------"
echo ""

echo "---------------------------------------------------------------------"
echo "üåê Paso 6: Instalando Google Chrome..."
echo "---------------------------------------------------------------------"
echo "¬°Tu navegador web favorito, listo para usar!"

# Instala Google Chrome (finalmente, instalando el programa que queremos)
echo "üöÄ Instalando Google Chrome..."
sudo pacman -S google-chrome || { echo "‚ùå Error al instalar google-chrome. Saliendo."; exit 1; }


echo ""
echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà"
echo "‚ñà                                                                   ‚ñà"
echo "‚ñà          üéâ ¬°Felicidades! Script de Automatizaci√≥n Completado üéâ          ‚ñà"
echo "‚ñà                                                                   ‚ñà"
echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà"
echo "¬°Tu sistema Arch Linux est√° actualizado, Chaotic-AUR configurado y Google Chrome instalado!"
echo ""
END_COMMENT
